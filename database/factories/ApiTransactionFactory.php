<?php

/** @var \Illuminate\Database\Eloquent\Factory $factory */

use App\Models\ApiTransaction;
use Faker\Generator as Faker;

$factory->define(ApiTransaction::class, function (Faker $faker) {

    return [
        'date_time_added' => $faker->randomDigitNotNull,
        'added_by' => $faker->randomDigitNotNull,
        'date_time_modified' => $faker->randomDigitNotNull,
        'modified_by' => $faker->randomDigitNotNull,
        'user_activity_log_id' => $faker->randomDigitNotNull,
        'source_ip' => $faker->word,
        'latest_ip' => $faker->word,
        'request_id' => $faker->randomDigitNotNull,
        'request_number' => $faker->word,
        'partner_id' => $faker->word,
        'partner_name' => $faker->word,
        'transaction_ref' => $faker->word,
        'transaction_date' => $faker->word,
        'collection_branch' => $faker->word,
        'transaction_type' => $faker->word,
        'service_type' => $faker->word,
        'sender_type' => $faker->word,
        'sender_full_name' => $faker->word,
        'sender_address' => $faker->word,
        'sender_city' => $faker->word,
        'sender_country_code' => $faker->word,
        'sender_currency_code' => $faker->word,
        'sender_mobile' => $faker->word,
        'send_amount' => $faker->word,
        'sender_id_type' => $faker->word,
        'sender_id_number' => $faker->word,
        'receiver_type' => $faker->word,
        'receiver_full_name' => $faker->word,
        'receiver_country_code' => $faker->word,
        'receiver_currency_code' => $faker->word,
        'receiver_amount' => $faker->word,
        'receiver_city' => $faker->word,
        'receiver_address' => $faker->word,
        'receiver_mobile' => $faker->word,
        'mobile_operator' => $faker->word,
        'receiver_id_type' => $faker->word,
        'receiver_id_number' => $faker->word,
        'receiver_account' => $faker->word,
        'receiver_bank' => $faker->word,
        'receiver_bank_code' => $faker->word,
        'receiver_swiftcode' => $faker->word,
        'receiver_branch' => $faker->word,
        'receiver_branch_code' => $faker->word,
        'exchange_rate' => $faker->word,
        'commission_amount' => $faker->word,
        'remarks' => $faker->word,
        'paybill' => $faker->word,
        'transaction_number' => $faker->word,
        'transaction_hash' => $faker->word,
        'transaction_status' => $faker->word,
        'original_message' => $faker->text,
        'transaction_response' => $faker->word,
        'switch_response' => $faker->word,
        'query_status' => $faker->word,
        'query_response' => $faker->word,
        'callbacks' => $faker->word,
        'callbacks_status' => $faker->word,
        'queued_callbacks' => $faker->randomDigitNotNull,
        'completed_callbacks' => $faker->randomDigitNotNull,
        'callback_status' => $faker->randomDigitNotNull,
        'record_version' => $faker->randomDigitNotNull,
        'need_syncing' => $faker->word,
        'synced' => $faker->word,
        'sent' => $faker->word,
        'incident_code' => $faker->word,
        'incident_description' => $faker->word,
        'incident_note' => $faker->word,
        'deleted_at' => $faker->word
    ];
});
